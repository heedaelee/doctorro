<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/tx
 						   http://www.springframework.org/schema/tx/spring-tx.xsd
 						   http://www.springframework.org/schema/mvc
					       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
					       http://www.springframework.org/schema/websocket
      					   http://www.springframework.org/schema/websocket/spring-websocket.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven/>
    <!-- @Autowired등 설정 잡을때 -->
    <context:annotation-config/>
	<context:component-scan base-package="com.doctorro.*" name-generator="com.doctorro.FullBeanNameGenerator"/>
	<!-- component-scan:빈객체 생성 
			 @Component,@Repository,@Service,@Controller,@Autowired
			 annotation-config:설정 사용
			 @Required, @Autowired, @Resource, @PostConstruct, @PreDestory, @Configuration
			 annotation-driven :디폴트 설정을 적용, HandlerMapping 및 HandlerAdapter 등록.
			 @NumberFormat, @DateTimeFormat, @Valid, Xml 및 JSON 읽고 쓰기 -->

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resource_doctor/**" location="/resource_doctor/"/>
    <mvc:resources mapping="/resource_user/**" location="/resource_user/"/>
	

    <!--  Tiles 설정하기 -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/spring/appServlet/Tiles.xml</value>
            </list>
        </property>
    </bean>

    <!-- urlBased 리턴 되는 주소형태의 값으로 타일즈 구성 -->
    <bean id="urlBasedViewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>
    <!--  Tiles 설정 END -->

    <!--비동기 설정-->
    <!-- <bean name="jsonview" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/> -->

    <!--Transaction 설정-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="driverManagerDataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--시큐리티 login 핸들러 일단 보류-->
    <!--<bean id="loginSuccessHandler" class="bitcamp.travelmaker.security.LoginSuccessHandler"></bean>
    <bean id="loginFailHandler" class="bitcamp.travelmaker.security.LoginFailHandler"></bean>-->
    
    <!--mail-->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="devtest771@gmail.com" />
		<property name="password" value="david001@" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.mime.charset">UTF-8</prop>
				<prop key="mail.transport.protocol">smtp</prop>
			</props>
		</property>
	</bean>
	<bean id="mailer" class="com.doctorro.common.mail.MailService">
		<property name="mailSender" ref="mailSender" /><!--mailSender 
			bean참조 -->
		<property name="velocityEngine" ref="velocityEngine" /><!--velocityEngine 
			bean참조 -->
	</bean>
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/WEB-INF/views/vm/" />
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">file</prop>
				<!-- <prop key="resource.loader.path">/WEB-INF/views/vm/</prop> -->
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.FileResourceLoader
				</prop>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>


</beans>
